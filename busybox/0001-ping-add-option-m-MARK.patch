From 96756d7b3a20f4ab64b69c487509bf3187d63be4 Mon Sep 17 00:00:00 2001
From: Yousong Zhou <yszhou4tech@gmail.com>
Date: Sun, 23 Apr 2017 17:43:08 +0800
Subject: [PATCH] ping: add option: -m MARK

bloat comparison between stripped version

    function                                             old     new   delta
    .rodata                                           424184  424236     +52
    ------------------------------------------------------------------------------
    (add/remove: 0/0 grow/shrink: 1/0 up/down: 52/0)               Total: 52 bytes

bloat comparison betwwen unstripped version

    function                                             old     new   delta
    common_ping_main                                    1826    1917     +91
    .rodata                                           424184  424236     +52
    packed_usage                                       31811   31856     +45
    ------------------------------------------------------------------------------
    (add/remove: 0/0 grow/shrink: 3/0 up/down: 188/0)             Total: 188 bytes
---
 networking/ping.c | 51 ++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 50 insertions(+), 1 deletion(-)

diff --git a/networking/ping.c b/networking/ping.c
index 94fb007f5..c57c0ad8e 100644
--- a/networking/ping.c
+++ b/networking/ping.c
@@ -46,6 +46,19 @@
 # define ICMP_ADDRESSREPLY   18  /* Address Mask Reply    */
 #endif
 
+#ifdef __linux__
+# undef SO_MARK
+# define SO_MARK 36
+#endif
+
+#ifdef SO_MARK
+# define IF_SO_MARK(...) __VA_ARGS__
+# define HAS_SO_MARK 1
+#else
+# define IF_SO_MARK(...)
+# define HAS_SO_MARK 0
+#endif
+
 //config:config PING
 //config:	bool "ping"
 //config:	default y
@@ -76,6 +89,19 @@
 //kbuild:lib-$(CONFIG_PING)  += ping.o
 //kbuild:lib-$(CONFIG_PING6) += ping.o
 
+//usage:#ifdef __linux__
+//usage:# undef SO_MARK
+//usage:# define SO_MARK 36
+//usage:#endif
+//usage:
+//usage:#ifdef SO_MARK
+//usage:# define IF_SO_MARK(...) __VA_ARGS__
+//usage:# define HAS_SO_MARK 1
+//usage:#else
+//usage:# define IF_SO_MARK(...)
+//usage:# define HAS_SO_MARK 0
+//usage:#endif
+
 //usage:#if !ENABLE_FEATURE_FANCY_PING
 //usage:# define ping_trivial_usage
 //usage:       "HOST"
@@ -93,6 +119,9 @@
 //usage:	IF_PING6(
 //usage:     "\n	-4,-6		Force IP or IPv6 name resolution"
 //usage:	)
+//usage:	IF_SO_MARK(
+//usage:     "\n	-m MARK		use mark to tag packets going out"
+//usage:	)
 //usage:     "\n	-c CNT		Send only CNT pings"
 //usage:     "\n	-s SIZE		Send SIZE data bytes in packets (default 56)"
 //usage:     "\n	-t TTL		Set TTL"
@@ -341,7 +370,7 @@ static int common_ping_main(sa_family_t af, char **argv)
 
 /* Full(er) version */
 
-#define OPT_STRING ("qvc:+s:t:+w:+W:+I:np:4" IF_PING6("6"))
+#define OPT_STRING ("qvc:+s:t:+w:+W:+I:np:4" IF_PING6("6") IF_SO_MARK("m:"))
 enum {
 	OPT_QUIET = 1 << 0,
 	OPT_VERBOSE = 1 << 1,
@@ -355,6 +384,7 @@ enum {
 	OPT_p = 1 << 9,
 	OPT_IPV4 = 1 << 10,
 	OPT_IPV6 = (1 << 11) * ENABLE_PING6,
+	OPT_m = (1 << 12) * HAS_SO_MARK,
 };
 
 
@@ -378,6 +408,9 @@ struct globals {
 	void *snd_packet; /* [datalen + ipv4/ipv6_const] */
 	const char *hostname;
 	const char *dotted;
+#if HAS_SO_MARK
+	uint32_t mark;
+#endif
 	union {
 		struct sockaddr sa;
 		struct sockaddr_in sin;
@@ -403,6 +436,7 @@ struct globals {
 #define total_secs   (G.total_secs  )
 #define hostname     (G.hostname    )
 #define dotted       (G.dotted      )
+#define mark         (G.mark        )
 #define pingaddr     (G.pingaddr    )
 #define rcvd_tbl     (G.rcvd_tbl    )
 #define INIT_G() do { \
@@ -837,6 +871,10 @@ static void ping(len_and_sockaddr *lsa)
 	printf(": %d data bytes\n", datalen);
 
 	create_icmp_socket(lsa);
+#if HAS_SO_MARK
+	if (mark && setsockopt(pingsock, SOL_SOCKET, SO_MARK, &mark, sizeof(mark)))
+		bb_perror_msg_and_die("setsockopt(%s) %d", "MARK", mark);
+#endif
 	/* untested whether "-I addr" really works for IPv6: */
 	if (str_I)
 		setsockopt_bindtodevice(pingsock, str_I);
@@ -861,12 +899,19 @@ static int common_ping_main(int opt, char **argv)
 {
 	len_and_sockaddr *lsa;
 	char *str_s, *str_p;
+#if HAS_SO_MARK
+	char *str_m;
+#endif
 
 	INIT_G();
 
 	/* exactly one argument needed; -v and -q don't mix; -c NUM, -t NUM, -w NUM, -W NUM */
 	opt_complementary = "=1:q--v:v--q";
+#if HAS_SO_MARK
+	opt |= getopt32(argv, OPT_STRING, &pingcount, &str_s, &opt_ttl, &deadline, &timeout, &str_I, &str_p, &str_m);
+#else
 	opt |= getopt32(argv, OPT_STRING, &pingcount, &str_s, &opt_ttl, &deadline, &timeout, &str_I, &str_p);
+#endif
 	if (opt & OPT_s)
 		datalen = xatou16(str_s); // -s
 	if (opt & OPT_I) { // -I
@@ -879,6 +924,10 @@ static int common_ping_main(int opt, char **argv)
 	}
 	if (opt & OPT_p)
 		G.pattern = xstrtou_range(str_p, 16, 0, 255);
+#if HAS_SO_MARK
+	if (opt & OPT_m)
+		mark = xatou32(str_m);
+#endif
 
 	myid = (uint16_t) getpid();
 	hostname = argv[optind];
-- 
2.12.2

